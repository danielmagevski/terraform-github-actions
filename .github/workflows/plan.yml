name: Create terraform plan

on:
  push:
    branches:
      - main
  pull_request:
permissions:
      id-token: write
      contents: read 
      pull-requests: write 
      
  

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}


jobs:

  plan:

    name: "terraform apply"
    runs-on: ubuntu-latest

    defaults:
      run: 
        shell: bash

    steps:
       - name: Checkout the repository to the runner
         uses: actions/checkout@v3
 
       - name: Setup Terraform with specified version on the runner
         uses: hashicorp/setup-terraform@v2
         with:
           terraform_version: 1.3.0

       - name: Terraform init
         id: init
         run: terraform init

       - name: Terraform format
         id: fmt
         run: terraform fmt -check

       - name: Terraform validate
         id: validate
         run: terraform validate -no-color

       - name: Terraform plan
         id: plan
         if: github.event_name == 'pull_request'
         run: terraform plan -no-color
         continue-on-error: true
        
        - name: Run Tfsec
        uses: aquasecurity/tfsec-action@v1.0.0

       - uses: actions/github-script@v6
         if: github.event_name == 'pull_request'
         env:
           PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
         with:
           github-token: ${{ secrets.GITHUB_TOKEN }}
           script: |
             const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
             #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
             #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
             #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

             <details><summary>Show Plan</summary>

             \`\`\`\n
             ${process.env.PLAN}
             \`\`\`

             </details>
             *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

             github.rest.issues.createComment({
               issue_number: context.issue.number,
               owner: context.repo.owner,
               repo: context.repo.repo,
               body: output
             })

       - name: Terraform Plan Status
         if: steps.plan.outcome == 'failure'
         run: exit 1

       - name: Terraform Apply
         if: github.ref == 'refs/heads/main' && github.event_name == 'push'
         run: terraform apply -auto-approve -input=false
